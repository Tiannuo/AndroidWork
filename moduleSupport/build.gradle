def config = rootProject.ext.android
def androidBaseLib = rootProject.ext.androidBaseLib
if (config.loginIsApplication) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdk config.compileSdkVersion

    defaultConfig {
        config.minSdkVersion
        config.targetSdkVersion
        flavorDimensions dimensions.supportlib
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // 多渠道打包
    productFlavors {
        //开发环境
        PFDev {
            dimension dimensions.supportlib
            buildConfigField "String", "IBASE_URL", url.devUrl
            buildConfigField "boolean", "isDevDebug", "true"
        }

        //测试环境
        PFTest {
            dimension dimensions.supportlib
            buildConfigField "String", "IBASE_URL", url.testUrl
            buildConfigField "boolean", "isTestDebug", "false"
        }

        //正式环境
        PFRelease {
            dimension dimensions.supportlib
            buildConfigField "String", "IBASE_URL", url.releaseUrl
            buildConfigField "boolean", "isReleaseDebug", "false"
        }
    }
    namespace 'com.work.supportlib'
}
dependencies {
    api androidBaseLib.ktx
    api androidBaseLib.appcompat
    api androidBaseLib.material
    testApi androidBaseLib.junit
    androidTestApi androidBaseLib.extJunit
    androidTestApi androidBaseLib.espresso
    // jetpack
    api "androidx.activity:activity-ktx:$androidBaseLib.version_activity_ktx"
    api "androidx.fragment:fragment-ktx:$androidBaseLib.version_fragment_ktx"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:$androidBaseLib.version_fragment_ktx"
    //Room 数据库
    api "androidx.room:room-runtime:$androidBaseLib.version_room"
    kapt "androidx.room:room-compiler:$androidBaseLib.version_room"
    api "androidx.room:room-ktx:$androidBaseLib.version_room"

    // Kotlin nav
    api("androidx.navigation:navigation-fragment-ktx:$androidBaseLib.version_nav")
    api("androidx.navigation:navigation-ui-ktx:$androidBaseLib.version_nav")

    api "androidx.lifecycle:lifecycle-livedata-ktx:$androidBaseLib.version_lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidBaseLib.version_lifecycle"
    api "androidx.constraintlayout:constraintlayout:$androidBaseLib.version_constraintlayout"
    api "androidx.legacy:legacy-support-v4:$androidBaseLib.version_legacy_support"

    api "androidx.swiperefreshlayout:swiperefreshlayout:$androidBaseLib.version_swiperefreshlayout"

    api "androidx.annotation:annotation:$androidBaseLib.version_annotation"
    // https://github.com/orhanobut/logger
    api "com.orhanobut:logger:$androidBaseLib.version_logger"
    //https://github.com/ReactiveX/RxJava
    api "io.reactivex.rxjava3:rxjava:$androidBaseLib.version_rxjava"
    //https://github.com/ReactiveX/RxAndroid
    api "io.reactivex.rxjava3:rxandroid:$androidBaseLib.version_android"
    api "com.squareup.retrofit2:retrofit:$androidBaseLib.version_retrofit"
    api "com.squareup.retrofit2:adapter-rxjava3:$androidBaseLib.version_adapter_rxjava"
    api "com.squareup.retrofit2:converter-gson:$androidBaseLib.version_converter_gson"
    api("com.squareup.okhttp3:okhttp:$androidBaseLib.version_okhttp")
    api("com.squareup.okhttp3:logging-interceptor:$androidBaseLib.version_logging_interceptor")
    // https://github.com/getActivity/XXPermissions
    api "com.github.getActivity:XXPermissions:$androidBaseLib.version_xxPermissions"
    api "com.pgyer:analytics:$androidBaseLib.version_pgyer"
    // 吐司框架：https://github.com/getActivity/ToastUtils
    api "com.github.getActivity:ToastUtils:$androidBaseLib.version_toastUtils"
    api "com.alibaba:arouter-api:$androidBaseLib.version_arouter_api"
    kapt "com.alibaba:arouter-compiler:$androidBaseLib.version_arouter_compiler"
    // 图片加载Glide
    api "com.github.bumptech.glide:glide:$androidBaseLib.version_glide"
    kapt "com.github.bumptech.glide:compiler:$androidBaseLib.version_glide"
    // 65535 问题
    api "com.android.support:multidex:$androidBaseLib.version_multidex"
    //kotlin 协程 （协同线程操作）
    api("org.jetbrains.kotlinx:kotlinx-coroutines-core:$androidBaseLib.version_kotlinx_coroutines")
    api("org.jetbrains.kotlinx:kotlinx-coroutines-android:$androidBaseLib.version_kotlinx_coroutines")
    // junit
    api "junit:junit:$androidBaseLib.version_junit"
    //dagger
    api "com.google.dagger:dagger:$androidBaseLib.version_dagger"
    kapt "com.google.dagger:dagger-compiler:$androidBaseLib.version_dagger"
    api "com.google.dagger:dagger-android:$androidBaseLib.version_dagger"
    api "com.google.dagger:dagger-android-support:$androidBaseLib.version_dagger"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$androidBaseLib.version_dagger"
    //hilt
    api "com.google.dagger:hilt-android:$androidBaseLib.version_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$androidBaseLib.version_hilt"

    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:$androidBaseLib.version_recyclerViewAdapterHelper"

    // https://github.com/gyf-dev/ImmersionBar
    // 基础依赖包，必须要依赖
    api "com.geyifeng.immersionbar:immersionbar:$androidBaseLib.version_immersionbar"
    // kotlin扩展（可选）
    api "com.geyifeng.immersionbar:immersionbar-ktx:$androidBaseLib.version_immersionbar"

    //https://github.com/zhpanvip/BannerViewPager/wiki/06.%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B
    api "com.github.zhpanvip:bannerviewpager:$androidBaseLib.version_bannerviewpager"

    // https://github.com/bingoogolapple/BGABanner-Android
    //api "androidx.legacy:legacy-support-v4:latestVersion"
    api "com.github.bingoogolapple:BGABanner-Android:$androidBaseLib.version_BGAbanner"
    api project(path:':flutter')
}