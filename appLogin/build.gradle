def config = rootProject.ext.android
def androidBaseLib = rootProject.ext.androidBaseLib
if (config.loginIsApplication) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdk config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            if (config.loginIsApplication) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation androidBaseLib.ktx
    implementation androidBaseLib.appcompat
    implementation androidBaseLib.material
    implementation project(path: ':supportLib')
    implementation project(path: ':baselib')
    implementation project(path: ':httplib')
    testImplementation androidBaseLib.junit
    androidTestImplementation androidBaseLib.extJunit
    androidTestImplementation androidBaseLib.espresso
    api 'com.alibaba:arouter-api:'+androidBaseLib.version_arouter_api
    kapt 'com.alibaba:arouter-compiler:'+androidBaseLib.version_arouter_compiler
}