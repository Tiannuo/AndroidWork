apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
def config = rootProject.ext.android
def androidBaseLib = rootProject.ext.androidBaseLib

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdk config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        flavorDimensions dimensions.articlelib
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    // 多渠道打包
    productFlavors {
        //开发环境
        PFDev {
            dimension dimensions.articlelib
            missingDimensionStrategy dimensions.baselib, "PFDev", "PFTest", "PFRelease"
            missingDimensionStrategy dimensions.httplib, "PFDev", "PFTest", "PFRelease"
            missingDimensionStrategy dimensions.supportlib, "PFDev", "PFTest", "PFRelease"
            buildConfigField "String", "IBASE_URL", url.devUrl
            buildConfigField "boolean", "isDevDebug", "true"
        }

        //测试环境
        PFTest {
            dimension dimensions.articlelib
            missingDimensionStrategy dimensions.baselib, "PFDev", "PFTest", "PFRelease"
            missingDimensionStrategy dimensions.httplib, "PFDev", "PFTest", "PFRelease"
            missingDimensionStrategy dimensions.supportlib, "PFDev", "PFTest", "PFRelease"
            buildConfigField "String", "IBASE_URL", url.testUrl
            buildConfigField "boolean", "isTestDebug", "false"
        }

        //正式环境
        PFRelease {
            dimension dimensions.articlelib
            missingDimensionStrategy dimensions.baselib, "PFDev", "PFTest", "PFRelease"
            missingDimensionStrategy dimensions.httplib, "PFDev", "PFTest", "PFRelease"
            missingDimensionStrategy dimensions.supportlib, "PFDev", "PFTest", "PFRelease"
            buildConfigField "String", "IBASE_URL", url.releaseUrl
            buildConfigField "boolean", "isReleaseDebug", "false"
        }
    }
    namespace 'com.work.article'
}

dependencies {
    implementation project(path: ':moduleBase')
    implementation project(path: ':moduleSupport')
    implementation project(path: ':moduleHttp')
    kapt 'com.alibaba:arouter-compiler:' + androidBaseLib.version_arouter_compiler
    kapt "com.google.dagger:dagger-compiler:$androidBaseLib.version_dagger"
}