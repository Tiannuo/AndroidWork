def config = rootProject.ext.android
def androidBaseLib = rootProject.ext.androidBaseLib
def url = rootProject.ext.url

apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
android {
    compileSdk config.compileSdkVersion

    defaultConfig {
        if (config.httpIsApplication) {
            applicationId "com.work.httplib"
        }
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        flavorDimensions dimensions.httplib
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // missingDimensionStrategy "sdk", "$flavor"
    }

    /*
         //更改AndroidManifest.xml中预先定义好占位符信息
            //manifestPlaceholders = [app_icon: "@drawable/icon"]
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"
            //是否zip对齐
            zipAlignEnabled true
            // 缩减resource文件
            shrinkResources true
            //Proguard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
    * */
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "String", "IBASE_URL", url.testUrl
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "String", "IBASE_URL", url.testUrl
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            /*    if (config.appIsApplication) {
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                } else {
                    manifest.srcFile 'src/main/AndroidManifest/AndroidManifest.xml'
                }*/
        }
    }

    // 多渠道打包
    productFlavors {
        //开发环境
        PFdev {
            dimension dimensions.httplib
            missingDimensionStrategy dimensions.supportlib, "PFdev", "PFTest", "PFrelease"
            buildConfigField "String", "IBASE_URL", url.devUrl
            buildConfigField "boolean", "isDevDebug", "true"
        }

        //测试环境
        PFTest {
            dimension dimensions.httplib
            missingDimensionStrategy dimensions.supportlib, "PFdev", "PFTest", "PFrelease"
            buildConfigField "String", "IBASE_URL", url.testUrl
            buildConfigField "boolean", "isTestDebug", "false"
        }

        //正式环境
        PFrelease {
            dimension dimensions.httplib
            missingDimensionStrategy dimensions.supportlib, "PFdev", "PFTest", "PFrelease"
            buildConfigField "String", "IBASE_URL", url.releaseUrl
            buildConfigField "boolean", "isReleaseDebug", "false"
        }
    }
}

dependencies {
    implementation androidBaseLib.ktx
    implementation androidBaseLib.appcompat
    implementation androidBaseLib.material
    testImplementation androidBaseLib.junit
    androidTestImplementation androidBaseLib.extJunit
    androidTestImplementation androidBaseLib.espresso
    implementation androidBaseLib.constraintlayout
    implementation project(path: ':moduleSupport')
}